print('=== БАНКОВСКАЯ СИСТЕМА ===')
print('')
print('Выберите действие:')
print('1. Создать аккаунт')
print('2. Пополнить счет')
print('3. Снять деньги')
print('4. Показать баланс')
print('5. История операций')
print('6. Перевод между счетами')
print('7. Выход')

аккаунты = {}

def создать_аккаунт(имя, баланс) :
    try :
        if имя in аккаунты:
            print(f"Ошибка, аккаунт с именем: {имя} уже существует")
            return None

        if баланс < 0 :
            print(f"Ошибка, ваш баланс: {баланс} не может быть отрицательным")

        аккаунт = {
            'имя': имя,
            'баланс': баланс,
            'история': [f"Создан аккаунт, начальный баланс = {баланс} "]
        }
        аккаунты[имя] = аккаунт
        print(f"Аккаунт создан, здравствуйте, {имя}, ваш баланс составляет: {баланс}")
        return аккаунт
    except Exception as e :
        print(f"Ошибка при создании аккаунта: {e}")
        return None


def пополнить_баланс(имя, сумма) :
    try :
        if имя not in аккаунты :
            print(f"Ошибка, аккаунта с именем {имя} не существует.")
            return False

        if сумма < 0 :
            print(f"Ошибка, невозможно пополнить счет на сумму {сумма}, так как она отрицательна.")
            return False

        аккаунты[имя]['баланс'] += сумма
        аккаунты[имя]['история'].append(f"Пополнение аккаунта: {имя}, на сумму: {сумма}")
        print(f"На аккаунт {имя}, зачислено {сумма} руб.")
        return True
    except Exception as e :
        print(f"Ошибка зачисления: {e}")
        return False

def снять_деньги(имя, сумма) :
    try :
        if имя not in аккаунты :
            print(f"Ошибка, аккаунта с именем {имя} не существует.")
            return False

        if сумма < 0:
            print(f"Ошибка, невозможно снять со счета сумму {сумма}, так как она отрицательна.")
            return False

        if сумма > аккаунты[имя]['баланс'] :
            print(f"Ошибка, снятие невозможно, ваш баланс = {аккаунты[имя]['баланс']}, меньше введённой вами суммы.")
            return False

        аккаунты[имя]['баланс'] -= сумма
        аккаунты[имя]['история'].append(f"Снятие средства с аккаунта {имя}, на сумму: {сумма}")
        print(f"С аккаунта {имя}, было осуществленно снятие средств на сумму: {сумма}")
        return True

    except Exception as e :
        print(f"Ошибка снятия средств: {e}")
        return False
def показать_баланс(имя) :
    try :
        if имя not in аккаунты :
            print(f"Ошибка, аккаунта с именем {имя} не существует.")
            return False

        print(аккаунты[имя]['баланс'])
        return True
    except Exception as e :
        print(f"Ошибка, показать баланс невозможно: {e}")
        return False

def история_операций(имя)  :
    try:
        if имя not in аккаунты:
            print(f"Ошибка, аккаунта с именем {имя} не существует.")
            return False

        print(аккаунты[имя]['история'])
        return True
    except Exception as e:
        print(f"Ошибка, показать баланс невозможно: {e}")
def перевод_между_счетами(от_кого, кому, сумма) :
    try :
        if от_кого not in аккаунты :
            print(f"Ошибка, аккаунт с именем {от_кого} не найден")
            return False

        if кому not in аккаунты :
            print(f"Ошибка, аккаунт с именем {кому} не найден")
            return False

        if сумма < 0 :
            print(f"Ошибка, перевод невозможен, так как сумма перевода: {сумма} отрицательна")
            return False

        if сумма > аккаунты[от_кого]['баланс'] :
            print(f"Ошибка, снятие невозможно, ваш баланс = {аккаунты[от_кого]['баланс']}, меньше введённой вами суммы.")
            return False

        аккаунты[от_кого]['баланс'] -= сумма
        аккаунты[кому]['баланс'] += сумма
        аккаунты[от_кого]['история'].append(f"Успешный перевод средств с аккаунта {от_кого} на аккаунт {кому}")
        аккаунты[кому]['история'].append(f"Успешный перевод средств с аккаунта {от_кого} на аккаунт {кому}")

    except Exception as e :
        print(f"Ошибка, перевод не выполнен: {e}")
def выход() :
    return ValueError

def главное_меню():
    while True:
        выбор = input('\nВведите номер действия (1-7): ')

        if выбор == '1':
            имя = input('Введите имя: ')
            баланс = float(input('Введите начальный баланс: '))
            создать_аккаунт(имя, баланс)

        elif выбор == '2':
            имя = input('Введите имя аккаунта: ')
            сумма = float(input('Введите сумму: '))
            пополнить_баланс(имя, сумма)

        elif выбор == '3':
            имя = input('Введите имя аккаунта: ')
            сумма = float(input('Введите сумму: '))
            снять_деньги(имя, сумма)

        elif выбор == '4':
            имя = input('Введите имя аккаунта: ')
            показать_баланс(имя)

        elif выбор == '5':
            имя = input('Введите имя аккаунта: ')
            история_операций(имя)

        elif выбор == '6':
            от_кого = input('От кого перевести: ')
            кому = input('Кому перевести: ')
            сумма = float(input('Сумма перевода: '))
            перевод_между_счетами(от_кого, кому, сумма)

        elif выбор == '7':
            print('До свидания!')
            break

        else:
            print('Неверный выбор! Попробуйте снова.')

if __name__ == "__main__":
    главное_меню()
